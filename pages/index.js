import Head from 'next/head';
import Image from 'next/image';
import { Inter } from '@next/font/google';
import styles from '../styles/Home.module.css';
import { useEffect, useState } from 'react';
import useRecorder from '../lib/hooks/useRecorder';
import RecorderFooter from '../components/recorderFooter/RecorderFooter';

const inter = Inter({ subsets: ['latin'] });

export default function Home() {
  const { recordings, recorderElementRef, isRecording, setIsRecording } =
    useRecorder();
  const [isPlaying, setIsPlaying] = useState(false);
  console.log(recordings);

  // const printSelectorForClickedElement = (event) => {
  //   console.log(event);
  //   console.log(
  //     event.type,
  //     getSelector(event.target),
  //     event.pageX,
  //     event.pageY,
  //   );
  // };

  // const printXYCoordinatesWhenMouseMoveOnPage = (event) => {
  //   console.log(event);
  // console.log(
  //   event.type,
  //   // getSelector(event.target),
  //   event.pageX,
  //   event.pageY,
  // );
  // };

  // const printOnKeyDown = (event) => {
  //   console.log(event);
  // console.log(
  //   event.type,
  //   getSelector(event.target),
  //   // event.pageX,
  //   // event.pageY,
  // );
  // };

  // useEffect(() => {
  //   console.log(
  //     document.querySelector(
  //       '#__next>MAIN:nth-child(1)>DIV:nth-child(1)>INPUT:nth-child(1)',
  //     ),
  //   );
  // }, []);

  // useEffect(() => {
  //   // const arr = [1, 11, 111, 1111, 11111, 11111];
  //   // let index = 0;

  //   // setTimeout(() => {
  //   //   document.elementFromPoint(513, 540).click();
  //   // }, 3000);

  //   // document
  //   //   .querySelector(
  //   //     '#__next>MAIN:nth-child(1)>DIV:nth-child(3)>A:nth-child(2)>H2:nth-child(1)',
  //   //   )
  //   //   .click();
  //   // const interval = setInterval(() => {
  //   //   if (index === 5) {
  //   //     clearInterval(interval);
  //   //   }
  //   //   document.querySelector(
  //   //     '#__next>MAIN:nth-child(1)>DIV:nth-child(1)>INPUT:nth-child(1)',
  //   //   ).value = arr[index];
  //   //   index = index + 1;
  //   // }, 200);

  //   // return () => clearInterval(interval);
  // }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <RecorderFooter
        isRecording={isRecording}
        isPlaying={isPlaying}
        setIsPlaying={setIsPlaying}
        setIsRecording={setIsRecording}
      />
      <main
        className={styles.main}
        ref={recorderElementRef}
        // onClick={(event) => printSelectorForClickedElement(event)}
        // onMouseMove={(event) => printXYCoordinatesWhenMouseMoveOnPage(event)}
        // onKeyDown={(event) => printOnKeyDown(event)}
      >
        <div className={styles.description}>
          <input className={styles.input} placeholder='Type & Test here' />
          <div>
            <a
              href='https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
              target='_blank'
              rel='noopener noreferrer'
            >
              By{' '}
              <Image
                src='/vercel.svg'
                alt='Vercel Logo'
                className={styles.vercelLogo}
                width={100}
                height={24}
                priority
              />
            </a>
          </div>
        </div>

        <div className={styles.center}>
          <Image
            className={styles.logo}
            src='/next.svg'
            alt='Next.js Logo'
            width={180}
            height={37}
            priority
          />
          <div className={styles.thirteen}>
            <Image
              src='/thirteen.svg'
              alt='13'
              width={40}
              height={31}
              priority
            />
          </div>
        </div>

        <div className={styles.grid}>
          <a
            href='https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
            className={styles.card}
            target='_blank'
            rel='noopener noreferrer'
          >
            <h2 className={inter.className}>
              Docs <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Find in-depth information about Next.js features and&nbsp;API.
            </p>
          </a>

          <a
            href='https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
            className={styles.card}
            target='_blank'
            rel='noopener noreferrer'
          >
            <h2 className={inter.className}>
              Learn <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Learn about Next.js in an interactive course with&nbsp;quizzes!
            </p>
          </a>

          <a
            href='https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
            className={styles.card}
            target='_blank'
            rel='noopener noreferrer'
          >
            <h2 className={inter.className}>
              Templates <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Discover and deploy boilerplate example Next.js&nbsp;projects.
            </p>
          </a>

          <a
            href='https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
            className={styles.card}
            target='_blank'
            rel='noopener noreferrer'
          >
            <h2 className={inter.className}>
              Deploy <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Instantly deploy your Next.js site to a shareable URL
              with&nbsp;Vercel.
            </p>
          </a>
        </div>
      </main>
    </>
  );
}
